{"version":3,"file":"datafield.min.js","sources":["../src/utils.js","../src/filter.js","../src/errors.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\r\n  if (el.hasOwnProperty(prop)) return el[prop]\r\n  return traverseKeys(el, prop)\r\n}\r\n\r\nexport function randomTakes (len, num, collection = []) {\r\n  const index = Math.floor(Math.random() * len)\r\n  if (!collection.includes(index)) collection.push(index)\r\n  return collection.length === num ? collection : randomTakes(len, num, collection)\r\n}\r\n\r\nfunction traverseKeys (obj, path, fallback) {\r\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\r\n  if (!path) return obj\r\n\r\n  let o = Object.assign({}, obj)\r\n  path = path.split('.')\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\r\n    o = o[path[i]]\r\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\r\n  }\r\n\r\n  return o\r\n}\r\n\r\nexport function checkTypes (a, b) {\r\n  if (typeof a !== typeof b) return false\r\n  if (typeof a === 'object' && a instanceof Date && b instanceof Date) return true\r\n  return typeof a === 'number' || typeof a === 'string'\r\n}\r\n","import { findProp } from './utils'\r\n\r\nfunction isGreater (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return propValue > value\r\n}\r\n\r\nfunction isGreaterOrEq (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return propValue >= value\r\n}\r\n\r\nfunction isLess (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return propValue < value\r\n}\r\n\r\nfunction isLessOrEq (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return propValue <= value\r\n}\r\n\r\nfunction isEq (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return value instanceof Date ? propValue.getTime() === value.getTime() : propValue === value\r\n}\r\n\r\nfunction isNotEq (el, selector, value) {\r\n  let propValue = findProp(el, selector)\r\n  if (Array.isArray(propValue)) propValue = propValue.length\r\n  if (value instanceof Date) propValue = new Date(propValue)\r\n  return value instanceof Date ? propValue.getTime() !== value.getTime() : propValue !== value\r\n}\r\n\r\nfunction isLike (el, selector) {\r\n  return Boolean(findProp(el, selector))\r\n}\r\n\r\nexport { isGreater, isGreaterOrEq, isLess, isLessOrEq, isEq, isNotEq, isLike }\r\n","export default function error (code) {\r\n  switch (code) {\r\n    case 'NO_CONS':\r\n      throw new Error('array should be passed into the DataField constructor')\r\n    case 'NOT_ARRAY':\r\n      throw new Error('DataField can only accept arrays')\r\n    case 'RANGE_ARG':\r\n      throw new Error('DataField range() method accepts 2 arguments of the same type')\r\n    case 'NO_SEL':\r\n      throw new Error('DataField selector not specified, use .where(selector)')\r\n    default:\r\n      throw new Error('DataField error')\r\n  }\r\n}\r\n","import { findProp, randomTakes, checkTypes } from './utils'\r\nimport { isGreater, isLess, isLessOrEq, isGreaterOrEq, isEq, isNotEq, isLike } from './filter'\r\nimport error from './errors'\r\n\r\n// TODO: Boolean comparison\r\nexport default class DataField {\r\n  constructor (array = error('NO_CONS'), selector) {\r\n    if (!Array.isArray(array)) error('NOT_ARRAY')\r\n    this.data = array.slice(0) // https://jsperf.com/cloning-arrays/3\r\n    this.caret = 0\r\n    this.selector = selector\r\n  }\r\n\r\n  exists (prop = this.selector) {\r\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  has (prop) {\r\n    const data = this.data.filter(el => {\r\n      const value = findProp(el, prop)\r\n      return Array.isArray(value) ? value.length : value\r\n    })\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  take (number = 1) {\r\n    const data = new DataField(this.data.slice(this.caret, this.caret + number), this.selector)\r\n    this.caret += number\r\n    return data\r\n  }\r\n\r\n  get length () {\r\n    this.__reset()\r\n    return this.data.length\r\n  }\r\n\r\n  takeRandom (number = 1) {\r\n    if (typeof number !== 'number') number = parseInt(String(number))\r\n    if (isNaN(number)) number = 1\r\n    number = Math.floor(number)\r\n    if (number > this.data.length) number = this.data.length\r\n    const selected = randomTakes(this.data.length, number)\r\n    const data = this.data.filter((el, i) => selected.includes(i))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  where (selector) {\r\n    this.selector = selector\r\n    return this\r\n  }\r\n\r\n  isTruthy () {\r\n    if (!this.selector) error('NO_SEL')\r\n    const data = this.data.filter(el => isLike(el, this.selector))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  isFalsy () {\r\n    if (!this.selector) error('NO_SEL')\r\n    const data = this.data.filter(el => !isLike(el, this.selector))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  eq (value) {\r\n    if (!this.selector) return this\r\n    const data = this.data.filter((el) => isEq(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  not (value) {\r\n    if (!this.selector) return this\r\n    const data = this.data.filter((el) => isNotEq(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  gt (value) {\r\n    if (!this.selector || value === undefined) return this\r\n    const data = this.data.filter((el) => isGreater(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  lt (value) {\r\n    if (!this.selector || value === undefined) return this\r\n    const data = this.data.filter((el) => isLess(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  gte (value) {\r\n    if (!this.selector || value === undefined) return this\r\n    const data = this.data.filter((el) => isGreaterOrEq(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  lte (value) {\r\n    if (!this.selector || value === undefined) return this\r\n    const data = this.data.filter((el) => isLessOrEq(el, this.selector, value))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  range (from, to) {\r\n    if (Array.isArray(from) && from.length === 2) {\r\n      [from, to] = [from[0], from[1]]\r\n    }\r\n    if (!checkTypes(from, to)) error('RANGE_ARG')\r\n    if (!this.selector) return this\r\n    const data = this.data\r\n      .filter((el) => isGreaterOrEq(el, this.selector, from))\r\n      .filter((el) => isLess(el, this.selector, to))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  includes (value) {\r\n    if (!this.selector) error('NO_SEL')\r\n    if (value === undefined) return this\r\n    const data = this.data.filter(el => {\r\n      const prop = findProp(el, this.selector)\r\n      return Array.isArray(prop) && prop.includes(value)\r\n    })\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  some (config = {}) {\r\n    return this.any(config)\r\n  }\r\n\r\n  any (config = {}) {\r\n    if (typeof config !== 'object' || !Object.keys(config).length) return this\r\n    const data = this.data.filter((el) => this.__checkForAny(el, config))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  all (config = {}) {\r\n    if (typeof config !== 'object' || !Object.keys(config).length) return this\r\n    const data = this.data.filter((el) => this.__checkForAll(el, config))\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  sort ({by, order = 'asc', type} = {}) {\r\n    const prop = this.__findFirstOccurrence(by)\r\n    if (!by || !prop) return this\r\n    if (order !== 'desc') order = 'asc'\r\n    if (!type) type = typeof prop\r\n    this.selector = by\r\n    return order === 'asc' ? this.asc(type) : this.desc(type)\r\n  }\r\n\r\n  asc (type) {\r\n    if (!this.selector) error('NO_SEL')\r\n    if (!this.data.length) return this\r\n    let data = []\r\n    type = type || this.__getType()\r\n    const prop = this.selector\r\n    switch (type) {\r\n      case 'n':\r\n      case 'num':\r\n      case 'number':\r\n        data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\r\n        break\r\n      case 'string':\r\n      case 'str':\r\n      case 's':\r\n        data = this.data.slice().sort((a, b) => String(findProp(a, prop)).localeCompare(String(findProp(b, prop))))\r\n        break\r\n      case 'date':\r\n      case 'd':\r\n        data = this.data.slice().sort((a, b) => Number(new Date(findProp(a, prop))) - Number(new Date(findProp(b, prop))))\r\n        break\r\n      case 'array':\r\n      case 'arr':\r\n        data = this.data.slice().sort((a, b) => {\r\n          const _a = findProp(a, prop)\r\n          const _b = findProp(b, prop)\r\n          if (Array.isArray(_a) && Array.isArray(_b)) {\r\n            return _a.length - _b.length\r\n          }\r\n        })\r\n        break\r\n      default:\r\n        return this\r\n    }\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  desc (type) {\r\n    if (!this.selector) error('NO_SEL')\r\n    if (!this.data.length) return this\r\n    let data = []\r\n    type = type || this.__getType()\r\n    const prop = this.selector\r\n    switch (type) {\r\n      case 'num':\r\n      case 'number':\r\n        data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\r\n        break\r\n      case 'str':\r\n      case 'string':\r\n        data = this.data.slice().sort((a, b) => String(findProp(b, prop)).localeCompare(String(findProp(a, prop))))\r\n        break\r\n      case 'date':\r\n        data = this.data.slice().sort((a, b) => Number(new Date(findProp(b, prop))) - Number(new Date(findProp(a, prop))))\r\n        break\r\n      case 'arr':\r\n      case 'array':\r\n        data = this.data.slice().sort((a, b) => {\r\n          const _a = findProp(a, prop)\r\n          const _b = findProp(b, prop)\r\n          if (Array.isArray(_a) && Array.isArray(_b)) {\r\n            return _b.length - _a.length\r\n          }\r\n        })\r\n        break\r\n      default:\r\n        return this\r\n    }\r\n    return new DataField(data, this.selector)\r\n  }\r\n\r\n  sum (prop, strict = true) {\r\n    this.__reset()\r\n    return this.data.reduce((sum, el) => {\r\n      const value = findProp(el, prop)\r\n      if (strict) return typeof value === 'number' ? sum + value : sum\r\n      return !isNaN(value) ? sum + Number(value) : sum\r\n    }, 0)\r\n  }\r\n\r\n  avg (prop, strict = true) {\r\n    this.__reset()\r\n    let sum = 0\r\n    let count = 0\r\n    this.data.forEach(el => {\r\n      const value = findProp(el, prop)\r\n      if (strict) {\r\n        if (typeof value === 'number') {\r\n          count++\r\n          sum += value\r\n        }\r\n      } else {\r\n        if (!isNaN(value)) {\r\n          count++\r\n          sum += Number(value)\r\n        }\r\n      }\r\n    })\r\n    return count ? sum / count : 0\r\n  }\r\n\r\n  median (prop, strict = true) {\r\n    this.__reset()\r\n    const values = []\r\n    this.data.forEach(el => {\r\n      const value = findProp(el, prop)\r\n      if (strict) {\r\n        if (typeof value === 'number') {\r\n          values.push(value)\r\n        }\r\n      } else {\r\n        if (!isNaN(value)) {\r\n          values.push(Number(value))\r\n        }\r\n      }\r\n    })\r\n\r\n    if (values.length === 0) {\r\n      return 0\r\n    } else if (values.length === 1) {\r\n      return values[0]\r\n    }\r\n\r\n    values.sort((a, b) => a - b)\r\n    const medianItem = Math.floor(values.length / 2)\r\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\r\n  }\r\n\r\n  values () {\r\n    this.__reset()\r\n    return this.data.slice(0) // https://jsperf.com/cloning-arrays/3\r\n  }\r\n\r\n  toArray () {\r\n    return this.values()\r\n  }\r\n\r\n  __reset () {\r\n    this.selector = ''\r\n  }\r\n\r\n  __getType (selector = this.selector) {\r\n    if (!selector) return\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const prop = findProp(this.data[i], selector)\r\n      if (prop) {\r\n        if (Array.isArray(prop)) return 'array'\r\n        return typeof prop\r\n      }\r\n    }\r\n  }\r\n\r\n  __findFirstOccurrence (selector) {\r\n    if (!selector) return\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const prop = findProp(this.data[i], selector)\r\n      if (prop) {\r\n        return prop\r\n      }\r\n    }\r\n  }\r\n\r\n  __checkForAny (el, config) {\r\n    const props = Object.keys(config)\r\n    for (let prop of props) {\r\n      switch (prop) {\r\n        case 'gt':\r\n          if (isGreater(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'gte':\r\n          if (isGreaterOrEq(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'lt':\r\n          if (isLess(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'lte':\r\n          if (isLessOrEq(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'eq':\r\n          if (isEq(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'not':\r\n          if (isNotEq(el, this.selector, config[prop])) return true\r\n          break\r\n        case 'is':\r\n          if (config[prop] === isLike(el, this.selector)) return true\r\n          break\r\n        case 'range':\r\n          if (\r\n            Array.isArray(config[prop]) && config[prop].length === 2 &&\r\n            isGreaterOrEq(el, this.selector, config[prop][0]) &&\r\n            isLess(el, this.selector, config[prop][1])) return true\r\n          break\r\n        default:\r\n      }\r\n    }\r\n  }\r\n\r\n  __checkForAll (el, config) {\r\n    const props = Object.keys(config)\r\n    for (let prop of props) {\r\n      switch (prop) {\r\n        case 'gt':\r\n          if (!isGreater(el, this.selector, config[prop])) return\r\n          break\r\n        case 'gte':\r\n          if (!isGreaterOrEq(el, this.selector, config[prop])) return\r\n          break\r\n        case 'lt':\r\n          if (!isLess(el, this.selector, config[prop])) return\r\n          break\r\n        case 'lte':\r\n          if (!isLessOrEq(el, this.selector, config[prop])) return\r\n          break\r\n        case 'eq':\r\n          if (!isEq(el, this.selector, config[prop])) return\r\n          break\r\n        case 'not':\r\n          if (!isNotEq(el, this.selector, config[prop])) return\r\n          break\r\n        case 'is':\r\n          if (config[prop] !== isLike(el, this.selector)) return\r\n          break\r\n        case 'range':\r\n          if (\r\n            Array.isArray(config[prop]) && config[prop].length === 2 &&\r\n            !(isGreaterOrEq(el, this.selector, config[prop][0]) &&\r\n              isLess(el, this.selector, config[prop][1]))) return\r\n          break\r\n        default:\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","isGreater","selector","value","propValue","Array","isArray","Date","isGreaterOrEq","isLess","isLessOrEq","isEq","getTime","isNotEq","isLike","Boolean","error","code","Error","DataField","array","this","data","slice","caret","exists","filter","undefined","has","const","take","number","prototypeAccessors","__reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","isTruthy","isFalsy","eq","not","gt","lt","gte","lte","range","from","to","a","b","some","config","any","keys","__checkForAny","all","__checkForAll","sort","ref","__findFirstOccurrence","by","order","type","asc","desc","__getType","localeCompare","Number","_a","_b","sum","strict","reduce","avg","count","forEach","median","values","medianItem","toArray"],"mappings":"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"}