{"version":3,"file":"index.js","sources":["../src/utils.js","../src/errors.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\n  if (el.hasOwnProperty(prop)) return el[prop]\n  return traverseKeys(el, prop)\n}\n\nexport function randomTakes (len, num, collection = []) {\n  const index = Math.floor(Math.random() * len)\n  if (!collection.includes(index)) collection.push(index)\n  return collection.length === num ? collection : randomTakes(len, num, collection)\n}\n\nfunction traverseKeys (obj, path, fallback) {\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\n  if (!path) return obj\n\n  let o = Object.assign({}, obj)\n  path = path.split('.')\n\n  for (let i = 0; i < path.length; i++) {\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\n    o = o[path[i]]\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\n  }\n\n  return o\n}\n\nexport function checkTypes (a, b) {\n  if (typeof a !== typeof b) return false\n  if (typeof a === 'object' && a instanceof Date && b instanceof Date) return true\n  return typeof a === 'number' || typeof a === 'string'\n}\n","export default function error (code) {\n  switch (code) {\n    case 'NO_CONS':\n      throw new Error('array should be passed into the DataField constructor')\n    case 'NOT_ARRAY':\n      throw new Error('DataField can only accept arrays')\n    case 'RANGE_ARG':\n      throw new Error('DataField range() method accepts 2 arguments of the same type')\n    case 'NO_SEL':\n      throw new Error('DataField selector not specified, use .where(selector)')\n    default:\n      throw new Error('DataField error')\n  }\n}\n","import { findProp, randomTakes, checkTypes } from './utils'\nimport error from './errors'\n\n// TODO: Boolean comparison\nexport default class DataField {\n  constructor (array = error('NO_CONS'), selector) {\n    if (!Array.isArray(array)) error('NOT_ARRAY')\n    this.data = array.slice(0) // https://jsperf.com/cloning-arrays/3\n    this.caret = 0\n    this.selector = selector\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data, this.selector)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data, this.selector)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number), this.selector)\n    this.caret += number\n    return data\n  }\n\n  get length () {\n    this.__reset()\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    if (isNaN(number)) number = 1\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data, this.selector)\n  }\n\n  where (selector) {\n    this.selector = selector\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() === value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue === value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() !== value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue !== value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) > value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue > value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) < value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue < value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) >= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue >= value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) <= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue <= value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  range (from, to) {\n    if (!checkTypes(from, to)) error('RANGE_ARG')\n    if (!this.selector) return this\n    let data\n    if (from instanceof Date) {\n      data = this.data.filter(el => {\n        const val = findProp(el, this.selector)\n        return new Date(val) >= from && new Date(val) < to\n      })\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      const val = findProp(el, this.selector)\n      if (Array.isArray(val)) {\n        return val.length >= from && val.length < to\n      }\n      return val >= from && val < to\n    })\n    return new DataField(data, this.selector)\n  }\n\n  includes (value) {\n    if (!this.selector) error('NO_SEL')\n    if (value === undefined) return this\n    const data = this.data.filter(el => {\n      const prop = findProp(el, this.selector)\n      return Array.isArray(prop) && prop.includes(value)\n    })\n    return new DataField(data)\n  }\n\n  sort ({by, order = 'asc', type} = {}) {\n    const prop = this.__findFirstOccurrence(by)\n    if (!by || !prop) return this\n    if (order !== 'desc') order = 'asc'\n    if (!type) type = typeof prop\n    this.selector = by\n    return order === 'asc' ? this.asc(type) : this.desc(type)\n  }\n\n  asc (type) {\n    if (!this.selector) error('NO_SEL')\n    if (!this.data.length) return this\n    let data = []\n    type = type || this.__getType()\n    const prop = this.selector\n    switch (type) {\n      case 'n':\n      case 'num':\n      case 'number':\n        data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n        break\n      case 'string':\n      case 'str':\n      case 's':\n        data = this.data.slice().sort((a, b) => String(findProp(a, prop)).localeCompare(String(findProp(b, prop))))\n        break\n      case 'date':\n      case 'd':\n        data = this.data.slice().sort((a, b) => Number(new Date(findProp(a, prop))) - Number(new Date(findProp(b, prop))))\n        break\n      case 'array':\n      case 'arr':\n        data = this.data.slice().sort((a, b) => {\n          const _a = findProp(a, prop)\n          const _b = findProp(b, prop)\n          if (Array.isArray(_a) && Array.isArray(_b)) {\n            return _a.length - _b.length\n          }\n        })\n        break\n      default:\n        return this\n    }\n    return new DataField(data, this.selector)\n  }\n\n  desc (type) {\n    if (!this.selector) error('NO_SEL')\n    if (!this.data.length) return this\n    let data = []\n    type = type || this.__getType()\n    const prop = this.selector\n    switch (type) {\n      case 'n':\n      case 'num':\n      case 'number':\n        data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n        break\n      case 'string':\n      case 'str':\n      case 's':\n        data = this.data.slice().sort((a, b) => String(findProp(b, prop)).localeCompare(String(findProp(a, prop))))\n        break\n      case 'date':\n      case 'd':\n        data = this.data.slice().sort((a, b) => Number(new Date(findProp(b, prop))) - Number(new Date(findProp(a, prop))))\n        break\n      case 'array':\n      case 'arr':\n        data = this.data.slice().sort((a, b) => {\n          const _a = findProp(a, prop)\n          const _b = findProp(b, prop)\n          if (Array.isArray(_a) && Array.isArray(_b)) {\n            return _b.length - _a.length\n          }\n        })\n        break\n      default:\n        return this\n    }\n    return new DataField(data, this.selector)\n  }\n\n  sum (prop, strict = true) {\n    this.__reset()\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    this.__reset()\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    this.__reset()\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    this.__reset()\n    return this.data.slice(0) // https://jsperf.com/cloning-arrays/3\n  }\n\n  toArray () {\n    return this.values()\n  }\n\n  __reset () {\n    this.selector = ''\n  }\n\n  __getType (selector = this.selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        if (Array.isArray(prop)) return 'array'\n        return typeof prop\n      }\n    }\n  }\n\n  __findFirstOccurrence (selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        return prop\n      }\n    }\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","error","code","Error","DataField","array","selector","Array","isArray","this","data","slice","caret","exists","filter","undefined","has","const","value","take","number","prototypeAccessors","__reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","eq","Date","getTime","propValue","not","gt","lt","gte","lte","range","from","to","a","b","val","sort","ref","__findFirstOccurrence","by","order","type","asc","desc","__getType","localeCompare","Number","_a","_b","sum","strict","reduce","avg","count","forEach","median","values","medianItem","toArray"],"mappings":"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"}