{"version":3,"file":"index.js","sources":["../src/utils.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\n  if (el.hasOwnProperty(prop)) return el[prop]\n  return traverseKeys(el, prop)\n}\n\nexport function randomTakes (len, num, collection = []) {\n  const index = Math.floor(Math.random() * len)\n  if (!collection.includes(index)) collection.push(index)\n  return collection.length === num ? collection : randomTakes(len, num, collection)\n}\n\nfunction traverseKeys (obj, path, fallback) {\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\n  if (!path) return obj\n\n  let o = Object.assign({}, obj)\n  path = path.split('.')\n\n  for (let i = 0; i < path.length; i++) {\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\n    o = o[path[i]]\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\n  }\n\n  return o\n}\n\nexport function checkTypes (a, b) {\n  if (typeof a !== typeof b) return false\n  if (typeof a === 'object' && a instanceof Date && b instanceof Date) return true\n  return typeof a === 'number' || typeof a === 'string'\n}\n","import { findProp, randomTakes, checkTypes } from './utils'\n\n/// TODO fix array in comparison\nexport default class DataField {\n  constructor (array = [], selector) {\n    this.data = array\n    this.caret = 0\n    this.selector = selector\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data, this.selector)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data, this.selector)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number), this.selector)\n    this.caret += number\n    return data\n  }\n\n  get length () {\n    this.__reset()\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    if (isNaN(number)) number = 1\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data, this.selector)\n  }\n\n  where (selector) {\n    this.selector = selector\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() === value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue === value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() !== value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue !== value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) > value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue > value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) < value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue < value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) >= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue >= value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) <= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      let propValue = findProp(el, this.selector)\n      if (Array.isArray(propValue)) propValue = propValue.length\n      return propValue <= value\n    }\n    )\n    return new DataField(data, this.selector)\n  }\n\n  range (from, to) {\n    if (!checkTypes(from, to)) throw new Error('bad arguments')\n    if (!this.selector) return this\n    let data\n    if (from instanceof Date) {\n      data = this.data.filter(el => {\n        const val = findProp(el, this.selector)\n        return new Date(val) >= from && new Date(val) < to\n      })\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      const val = findProp(el, this.selector)\n      if (Array.isArray(val)) {\n        return val.length >= from && val.length < to\n      }\n      return val >= from && val < to\n    })\n    return new DataField(data, this.selector)\n  }\n\n  sort ({by, order = 'asc', type} = {}) {\n    const prop = this.__findFirstOccurrence(by)\n    if (!by || !prop) return this\n    if (order !== 'desc') order = 'asc'\n    if (!type) type = typeof prop\n    this.selector = by\n    return order === 'asc' ? this.asc(type) : this.desc(type)\n  }\n\n  asc (type) {\n    if (this.selector && this.data.length) {\n      let data = []\n      type = type || this.__getType()\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(a, prop)).localeCompare(String(findProp(b, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(a, prop))) - Number(new Date(findProp(b, prop))))\n          break\n        case 'array':\n        case 'arr':\n          data = this.data.slice().sort((a, b) => {\n            const _a = findProp(a, prop)\n            const _b = findProp(b, prop)\n            if (Array.isArray(_a) && Array.isArray(_b)) {\n              return _a.length - _b.length\n            }\n          })\n          break\n        default:\n          return this\n      }\n      return new DataField(data, this.selector)\n    }\n    return this\n  }\n\n  desc (type) {\n    if (this.selector && this.data.length) {\n      let data = []\n      type = type || this.__getType()\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(b, prop)).localeCompare(String(findProp(a, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(b, prop))) - Number(new Date(findProp(a, prop))))\n          break\n        case 'array':\n        case 'arr':\n          data = this.data.slice().sort((a, b) => {\n            const _a = findProp(a, prop)\n            const _b = findProp(b, prop)\n            if (Array.isArray(_a) && Array.isArray(_b)) {\n              return _b.length - _a.length\n            }\n          })\n          break\n        default:\n          return this\n      }\n      return new DataField(data, this.selector)\n    }\n    return this\n  }\n\n  sum (prop, strict = true) {\n    this.__reset()\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    this.__reset()\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    this.__reset()\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    this.__reset()\n    return this.data.slice(0)\n  }\n\n  toArray () {\n    return this.values()\n  }\n\n  __reset () {\n    this.selector = ''\n  }\n\n  __getType (selector = this.selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        if (Array.isArray(prop)) return 'array'\n        return typeof prop\n      }\n    }\n  }\n\n  __findFirstOccurrence (selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        return prop\n      }\n    }\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","DataField","array","selector","this","data","caret","exists","filter","undefined","has","const","value","Array","isArray","take","number","slice","prototypeAccessors","__reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","eq","Date","getTime","propValue","not","gt","lt","gte","lte","range","from","to","a","b","Error","val","sort","ref","__findFirstOccurrence","by","order","type","asc","desc","__getType","localeCompare","Number","_a","_b","sum","strict","reduce","avg","count","forEach","median","values","medianItem","toArray"],"mappings":"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"}