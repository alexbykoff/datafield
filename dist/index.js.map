{"version":3,"file":"index.js","sources":["../src/utils.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\r\n  if (el.hasOwnProperty(prop)) return el[prop]\r\n  return traverseKeys(el, prop)\r\n}\r\n\r\nexport function randomTakes (len, num, collection = []) {\r\n  const index = Math.floor(Math.random() * len)\r\n  if (!collection.includes(index)) collection.push(index)\r\n  return collection.length === num ? collection : randomTakes(len, num, collection)\r\n}\r\n\r\nfunction traverseKeys (obj, path, fallback) {\r\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\r\n  if (!path) return obj\r\n\r\n  let o = Object.assign({}, obj)\r\n  path = path.split('.')\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\r\n    o = o[path[i]]\r\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\r\n  }\r\n\r\n  return o\r\n}\r\n","import { findProp, randomTakes } from './utils'\n\nexport default class DataField {\n  constructor (array = []) {\n    this.data = array\n    this.caret = 0\n    this.selector = ''\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number))\n    this.caret += number\n    return data\n  }\n\n  length () {\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data)\n  }\n\n  select (selector) {\n    this.selector = selector\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    const data = this.data.filter(el => findProp(el, this.selector) === value)\n    return new DataField(data)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    const data = this.data.filter(el => findProp(el, this.selector) !== value)\n    return new DataField(data)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) > value)\n    return new DataField(data)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) < value)\n    return new DataField(data)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) >= value)\n    return new DataField(data)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) <= value)\n    return new DataField(data)\n  }\n\n  asc (prop, type = 'string') {\n    if (prop && this.data.length) {\n      let data = []\n      switch (type) {\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n          break\n        case 'string':\n        case 'str':\n        default:\n          data = this.data.slice().sort((a, b) => findProp(a, prop).localeCompare(findProp(b, prop)))\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  desc (prop, type = 'string') {\n    if (prop && this.data.length) {\n      let data = []\n      switch (type) {\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n          break\n        case 'string':\n        case 'str':\n        default:\n          data = this.data.slice().sort((a, b) => findProp(b, prop).localeCompare(findProp(a, prop)))\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  sum (prop, strict = true) {\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    return this.data\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","DataField","array","this","data","caret","selector","exists","filter","undefined","has","const","value","Array","isArray","take","number","slice","takeRandom","parseInt","String","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","select","eq","not","gt","lt","gte","lte","asc","type","sort","a","b","localeCompare","desc","sum","strict","reduce","isNaN","Number","avg","count","forEach","median","values","medianItem"],"mappings":"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"}