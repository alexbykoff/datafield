{"version":3,"file":"index.js","sources":["../src/utils.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\n  if (el.hasOwnProperty(prop)) return el[prop]\n  return traverseKeys(el, prop)\n}\n\nexport function randomTakes (len, num, collection = []) {\n  const index = Math.floor(Math.random() * len)\n  if (!collection.includes(index)) collection.push(index)\n  return collection.length === num ? collection : randomTakes(len, num, collection)\n}\n\nfunction traverseKeys (obj, path, fallback) {\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\n  if (!path) return obj\n\n  let o = Object.assign({}, obj)\n  path = path.split('.')\n\n  for (let i = 0; i < path.length; i++) {\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\n    o = o[path[i]]\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\n  }\n\n  return o\n}\n\nexport function checkTypes (a, b) {\n  if (typeof a !== typeof b) return false\n  if (typeof a === 'object' && a instanceof Date && b instanceof Date) return true\n  return typeof a === 'number' || typeof a === 'string'\n}\n","import { findProp, randomTakes, checkTypes } from './utils'\n\n/// TODO fix array in comparison\nexport default class DataField {\n  constructor (array = [], selector) {\n    this.data = array\n    this.caret = 0\n    this.selector = selector\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data, this.selector)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data, this.selector)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number), this.selector)\n    this.caret += number\n    return data\n  }\n\n  length () {\n    this.__reset()\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    if (isNaN(number)) number = 1\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data, this.selector)\n  }\n\n  where (selector) {\n    this.selector = selector\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() === value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) === value)\n    return new DataField(data, this.selector)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() !== value.getTime())\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) !== value)\n    return new DataField(data, this.selector)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) > value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) > value)\n    return new DataField(data, this.selector)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) < value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) < value)\n    return new DataField(data, this.selector)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) >= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) >= value)\n    return new DataField(data, this.selector)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) <= value)\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) <= value)\n    return new DataField(data, this.selector)\n  }\n\n  range (from, to) {\n    if (!checkTypes(from, to)) throw new Error('bad arguments')\n    if (!this.selector) return this\n    let data\n    if (from instanceof Date) {\n      data = this.data.filter(el => {\n        const val = findProp(el, this.selector)\n        return new Date(val) >= from && new Date(val) < to\n      })\n      return new DataField(data, this.selector)\n    }\n    data = this.data.filter(el => {\n      const val = findProp(el, this.selector)\n      if (Array.isArray(val)) {\n        return val.length >= from && val < to.length\n      }\n      return val >= from && val < to\n    })\n    return new DataField(data, this.selector)\n  }\n\n  sort ({by, order = 'asc', type} = {}) {\n    const prop = this.__findFirstOccurrence(by)\n    if (!by || !prop) return this\n    if (order !== 'desc') order = 'asc'\n    if (!type) type = typeof prop\n    this.selector = by\n    return order === 'asc' ? this.asc(type) : this.desc(type)\n  }\n\n  asc (type) {\n    if (this.selector && this.data.length) {\n      let data = []\n      type = type || this.__getType()\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(a, prop)).localeCompare(String(findProp(b, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(a, prop))) - Number(new Date(findProp(b, prop))))\n          break\n        case 'array':\n        case 'arr':\n          data = this.data.slice().sort((a, b) => {\n            const _a = findProp(a, prop)\n            const _b = findProp(b, prop)\n            if (Array.isArray(_a) && Array.isArray(_b)) {\n              return _a.length - _b.length\n            }\n          })\n          break\n        default:\n          return this\n      }\n      return new DataField(data, this.selector)\n    }\n    return this\n  }\n\n  desc (type) {\n    if (this.selector && this.data.length) {\n      let data = []\n      type = type || this.__getType()\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(b, prop)).localeCompare(String(findProp(a, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(b, prop))) - Number(new Date(findProp(a, prop))))\n          break\n        case 'array':\n        case 'arr':\n          data = this.data.slice().sort((a, b) => {\n            const _a = findProp(a, prop)\n            const _b = findProp(b, prop)\n            if (Array.isArray(_a) && Array.isArray(_b)) {\n              return _b.length - _a.length\n            }\n          })\n          break\n        default:\n          return this\n      }\n      return new DataField(data, this.selector)\n    }\n    return this\n  }\n\n  sum (prop, strict = true) {\n    this.__reset()\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    this.__reset()\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    this.__reset()\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    this.__reset()\n    return this.data\n  }\n\n  __reset () {\n    this.selector = ''\n  }\n\n  __getType (selector = this.selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        if (Array.isArray(prop)) return 'array'\n        return typeof prop\n      }\n    }\n  }\n\n  __findFirstOccurrence (selector) {\n    if (!selector) return\n    for (let i = 0; i < this.data.length; i++) {\n      const prop = findProp(this.data[i], selector)\n      if (prop) {\n        return prop\n      }\n    }\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","DataField","array","selector","this","data","caret","exists","filter","undefined","has","const","value","Array","isArray","take","number","slice","__reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","eq","Date","getTime","not","gt","lt","gte","lte","range","from","to","a","b","Error","val","sort","ref","__findFirstOccurrence","by","order","type","asc","desc","__getType","localeCompare","Number","_a","_b","sum","strict","reduce","avg","count","forEach","median","values","medianItem"],"mappings":"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"}