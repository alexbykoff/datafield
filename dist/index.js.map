{"version":3,"file":"index.js","sources":["../src/utils.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\n  if (el.hasOwnProperty(prop)) return el[prop]\n  return traverseKeys(el, prop)\n}\n\nexport function randomTakes (len, num, collection = []) {\n  const index = Math.floor(Math.random() * len)\n  if (!collection.includes(index)) collection.push(index)\n  return collection.length === num ? collection : randomTakes(len, num, collection)\n}\n\nfunction traverseKeys (obj, path, fallback) {\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\n  if (!path) return obj\n\n  let o = Object.assign({}, obj)\n  path = path.split('.')\n\n  for (let i = 0; i < path.length; i++) {\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\n    o = o[path[i]]\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\n  }\n\n  return o\n}\n\nexport function checkTypes (a, b) {\n  if (typeof a !== typeof b) return false\n  if (typeof a === 'object' && a instanceof Date && b instanceof Date) return true\n  return typeof a === 'number' || typeof a === 'string'\n}\n","import { findProp, randomTakes, checkTypes } from './utils'\n\nexport default class DataField {\n  constructor (array = []) {\n    this.data = array\n    this.caret = 0\n    this.selector = ''\n    this.fieldType = ''\n    this.types = ['number', 'num', 'n', 'date', 'd', 'string', 'str', 's']\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number))\n    this.caret += number\n    return data\n  }\n\n  length () {\n    this.reset()\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    if (isNaN(number)) number = 1\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data)\n  }\n\n  where (selector) {\n    this.selector = selector\n    return this\n  }\n\n  type (type = 'string') {\n    this.fieldType = this.types.includes(type) ? type : 'string'\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() === value.getTime())\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) === value)\n    return new DataField(data)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)).getTime() !== value.getTime())\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) !== value)\n    return new DataField(data)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) > value)\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) > value)\n    return new DataField(data)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) < value)\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) < value)\n    return new DataField(data)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) >= value)\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) >= value)\n    return new DataField(data)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    let data\n    if (value instanceof Date) {\n      data = this.data.filter(el => new Date(findProp(el, this.selector)) <= value)\n      return new DataField(data)\n    }\n    data = this.data.filter(el => findProp(el, this.selector) <= value)\n    return new DataField(data)\n  }\n\n  range (from, to) {\n    if (!checkTypes(from, to)) throw new Error('bad arguments')\n    if (!this.selector) return this\n    let data\n    if (from instanceof Date) {\n      data = this.data.filter(el => {\n        const val = findProp(el, this.selector)\n        return new Date(val) >= from && new Date(val) < to\n      })\n      return new DataField(data)\n    }\n    data = this.data.filter(el => {\n      const val = findProp(el, this.selector)\n      return val >= from && val < to\n    })\n    return new DataField(data)\n  }\n\n  sort ({by, order = 'asc', type} = {}) {\n    const prop = findProp(this.data[0], by)\n    if (!by || !prop) return this\n    if (order !== 'desc') order = 'asc'\n    if (!type) type = typeof prop\n    this.selector = by\n    this.fieldType = type\n    return order === 'asc' ? this.asc() : this.desc()\n  }\n\n  asc () {\n    if (this.selector && this.data.length) {\n      let data = []\n      const type = typeof findProp(this.data[0], this.selector)\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(a, prop)).localeCompare(String(findProp(b, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(a, prop))) - Number(new Date(findProp(b, prop))))\n          break\n        default:\n          return this\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  desc () {\n    if (this.selector && this.data.length) {\n      let data = []\n      const type = this.fieldType || typeof findProp(this.data[0], this.selector)\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => String(findProp(b, prop)).localeCompare(String(findProp(a, prop))))\n          break\n        case 'date':\n        case 'd':\n          data = this.data.slice().sort((a, b) => Number(new Date(findProp(b, prop))) - Number(new Date(findProp(a, prop))))\n          break\n        default:\n          return this\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  sum (prop, strict = true) {\n    this.reset()\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    this.reset()\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    this.reset()\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    this.reset()\n    return this.data\n  }\n\n  reset () {\n    this.fieldType = ''\n    this.selector = ''\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","DataField","array","this","data","caret","selector","fieldType","types","exists","filter","undefined","has","const","value","Array","isArray","take","number","slice","reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","type","eq","Date","getTime","not","gt","lt","gte","lte","range","from","to","a","b","Error","val","sort","ref","by","order","asc","desc","localeCompare","Number","sum","strict","reduce","avg","count","forEach","median","values","medianItem"],"mappings":"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"}