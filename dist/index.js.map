{"version":3,"file":"index.js","sources":["../src/utils.js","../src/datafield.js"],"sourcesContent":["export function findProp (el, prop) {\r\n  if (el.hasOwnProperty(prop)) return el[prop]\r\n  return traverseKeys(el, prop)\r\n}\r\n\r\nexport function randomTakes (len, num, collection = []) {\r\n  const index = Math.floor(Math.random() * len)\r\n  if (!collection.includes(index)) collection.push(index)\r\n  return collection.length === num ? collection : randomTakes(len, num, collection)\r\n}\r\n\r\nfunction traverseKeys (obj, path, fallback) {\r\n  if (!obj || typeof obj !== 'object') return typeof fallback === 'function' ? fallback() : fallback\r\n  if (!path) return obj\r\n\r\n  let o = Object.assign({}, obj)\r\n  path = path.split('.')\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (!o.hasOwnProperty(path[i])) return typeof fallback === 'function' ? fallback() : fallback\r\n    o = o[path[i]]\r\n    if (o !== Object(o) && i < path.length - 1) return typeof fallback === 'function' ? fallback() : fallback\r\n  }\r\n\r\n  return o\r\n}\r\n","import { findProp, randomTakes } from './utils'\n\nexport default class DataField {\n  constructor (array = []) {\n    this.data = array\n    this.caret = 0\n    this.selector = ''\n    this.fieldType = ''\n  }\n\n  exists (prop) {\n    const data = this.data.filter(el => findProp(el, prop) !== undefined)\n    return new DataField(data)\n  }\n\n  has (prop) {\n    const data = this.data.filter(el => {\n      const value = findProp(el, prop)\n      return Array.isArray(value) ? value.length : value\n    })\n    return new DataField(data)\n  }\n\n  take (number = 1) {\n    const data = new DataField(this.data.slice(this.caret, this.caret + number))\n    this.caret += number\n    return data\n  }\n\n  length () {\n    this.reset()\n    return this.data.length\n  }\n\n  takeRandom (number = 1) {\n    if (typeof number !== 'number') number = parseInt(String(number))\n    if (isNaN(number)) number = 1\n\n    number = Math.floor(number)\n    if (number > this.data.length) number = this.data.length\n    const selected = randomTakes(this.data.length, number)\n    const data = this.data.filter((el, i) => selected.includes(i))\n    return new DataField(data)\n  }\n\n  where (selector) {\n    this.selector = selector\n    return this\n  }\n\n  type (type = 'string') {\n    const types = ['number', 'num', 'n', 'date', 'd', 'string', 'str', 's']\n    this.fieldType = types.includes(type) ? type : 'string'\n    return this\n  }\n\n  eq (value) {\n    if (!this.selector) return this\n    const data = this.data.filter(el => findProp(el, this.selector) === value)\n    return new DataField(data)\n  }\n\n  not (value) {\n    if (!this.selector) return this\n    const data = this.data.filter(el => findProp(el, this.selector) !== value)\n    return new DataField(data)\n  }\n\n  gt (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) > value)\n    return new DataField(data)\n  }\n\n  lt (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) < value)\n    return new DataField(data)\n  }\n\n  gte (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) >= value)\n    return new DataField(data)\n  }\n\n  lte (value) {\n    if (!this.selector || value === undefined) return this\n    const data = this.data.filter(el => findProp(el, this.selector) <= value)\n    return new DataField(data)\n  }\n\n  asc () {\n    if (this.selector && this.data.length) {\n      let data = []\n      const type = this.fieldType || typeof findProp(this.data[0], this.selector)\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(a, prop) - findProp(b, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => findProp(a, prop).localeCompare(findProp(b, prop)))\n          break\n        default:\n          return this\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  desc () {\n    if (this.selector && this.data.length) {\n      let data = []\n      const type = this.fieldType || typeof findProp(this.data[0], this.selector)\n      const prop = this.selector\n      switch (type) {\n        case 'n':\n        case 'num':\n        case 'number':\n          data = this.data.slice().sort((a, b) => findProp(b, prop) - findProp(a, prop))\n          break\n        case 'string':\n        case 'str':\n        case 's':\n          data = this.data.slice().sort((a, b) => findProp(b, prop).localeCompare(findProp(a, prop)))\n          break\n        default:\n          return this\n      }\n      return new DataField(data)\n    }\n    return this\n  }\n\n  sum (prop, strict = true) {\n    this.reset()\n    return this.data.reduce((sum, el) => {\n      const value = findProp(el, prop)\n      if (strict) return typeof value === 'number' ? sum + value : sum\n      return !isNaN(value) ? sum + Number(value) : sum\n    }, 0)\n  }\n\n  avg (prop, strict = true) {\n    this.reset()\n    let sum = 0\n    let count = 0\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          count++\n          sum += value\n        }\n      } else {\n        if (!isNaN(value)) {\n          count++\n          sum += Number(value)\n        }\n      }\n    })\n    return count ? sum / count : 0\n  }\n\n  median (prop, strict = true) {\n    this.reset()\n    const values = []\n    this.data.forEach(el => {\n      const value = findProp(el, prop)\n      if (strict) {\n        if (typeof value === 'number') {\n          values.push(value)\n        }\n      } else {\n        if (!isNaN(value)) {\n          values.push(Number(value))\n        }\n      }\n    })\n\n    if (values.length === 0) {\n      return 0\n    } else if (values.length === 1) {\n      return values[0]\n    }\n\n    values.sort((a, b) => a - b)\n    const medianItem = Math.floor(values.length / 2)\n    return values.length % 2 ? values[medianItem] : (values[medianItem - 1] + values[medianItem]) / 2\n  }\n\n  values () {\n    this.reset()\n    return this.data\n  }\n\n  reset () {\n    this.fieldType = ''\n    this.selector = ''\n  }\n}\n"],"names":["findProp","el","prop","hasOwnProperty","obj","path","fallback","let","o","Object","assign","split","i","length","traverseKeys","DataField","array","this","data","caret","selector","fieldType","exists","filter","undefined","has","const","value","Array","isArray","take","number","slice","reset","takeRandom","parseInt","String","isNaN","Math","floor","selected","randomTakes","len","num","collection","index","random","includes","push","where","type","eq","not","gt","lt","gte","lte","asc","sort","a","b","localeCompare","desc","sum","strict","reduce","Number","avg","count","forEach","median","values","medianItem"],"mappings":"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"}